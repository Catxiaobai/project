         104967 function calls (103827 primitive calls) in 1.930 CPU seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 :0(allocate_lock)
    17024    0.069    0.000    0.069    0.000 :0(append)
      137    0.001    0.000    0.001    0.000 :0(callable)
        2    0.000    0.000    0.000    0.000 :0(close)
        4    0.000    0.000    0.000    0.000 :0(cmp)
       52    0.000    0.000    0.000    0.000 :0(compile)
     2874    0.047    0.000    0.047    0.000 :0(count)
      261    0.001    0.000    0.001    0.000 :0(end)
        1    0.000    0.000    0.000    0.000 :0(exc_info)
        1    0.002    0.002    1.927    1.927 :0(execfile)
        1    0.000    0.000    0.000    0.000 :0(exp)
      722    0.003    0.000    0.003    0.000 :0(extend)
       35    0.000    0.000    0.000    0.000 :0(find)
      495    0.002    0.000    0.002    0.000 :0(get)
      300    0.001    0.000    0.001    0.000 :0(group)
      179    0.001    0.000    0.001    0.000 :0(groups)
      213    0.002    0.000    0.002    0.000 :0(has_key)
        6    0.000    0.000    0.000    0.000 :0(hasattr)
        1    0.000    0.000    0.000    0.000 :0(hexlify)
    10563    0.043    0.000    0.043    0.000 :0(isinstance)
       55    0.000    0.000    0.000    0.000 :0(items)
       93    0.000    0.000    0.000    0.000 :0(iteritems)
       40    0.000    0.000    0.000    0.000 :0(join)
        5    0.000    0.000    0.000    0.000 :0(keys)
9404/9191    0.040    0.000    0.041    0.000 :0(len)
        2    0.000    0.000    0.000    0.000 :0(log)
        2    0.000    0.000    0.000    0.000 :0(lower)
      949    0.008    0.000    0.008    0.000 :0(match)
      262    0.001    0.000    0.001    0.000 :0(max)
      768    0.007    0.000    0.007    0.000 :0(min)
        2    0.000    0.000    0.000    0.000 :0(open)
      324    0.003    0.000    0.003    0.000 :0(ord)
     1822    0.008    0.000    0.008    0.000 :0(pop)
       62    0.000    0.000    0.000    0.000 :0(range)
        1    0.000    0.000    0.000    0.000 :0(read)
        1    0.000    0.000    0.000    0.000 :0(readlines)
      138    0.001    0.000    0.001    0.000 :0(remove)
      588    0.002    0.000    0.002    0.000 :0(replace)
        3    0.000    0.000    0.000    0.000 :0(rfind)
        1    0.000    0.000    0.000    0.000 :0(seed)
        1    0.002    0.002    0.002    0.002 :0(setprofile)
        2    0.001    0.000    0.004    0.002 :0(sort)
      111    0.001    0.000    0.001    0.000 :0(split)
        1    0.000    0.000    0.000    0.000 :0(sqrt)
        1    0.070    0.070    0.070    0.070 :0(urandom)
        3    0.000    0.000    0.000    0.000 :0(values)
        1    0.000    0.000    1.927    1.927 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 EFSM.py:10(SLIMException)
       23    0.008    0.000    0.045    0.002 EFSM.py:1019(nticdSuccessor)
    16476    0.189    0.000    0.189    0.000 EFSM.py:114(isStateIn)
       23    0.004    0.000    0.004    0.000 EFSM.py:1160(nticdPredecessor)
        1    0.000    0.000    0.045    0.045 EFSM.py:1170(initNticdSuccDict)
        1    0.000    0.000    0.004    0.004 EFSM.py:1176(initNticdpredDict)
       23    0.056    0.002    0.229    0.010 EFSM.py:1200(ntscdSuccessor)
       22    0.002    0.000    0.039    0.002 EFSM.py:1254(ntscdSuccCandidate)
        1    0.000    0.000    0.000    0.000 EFSM.py:128(Edge)
        1    0.000    0.000    0.230    0.230 EFSM.py:1319(initNtscdSuccDict)
      291    0.003    0.000    0.006    0.000 EFSM.py:132(__init__)
        1    0.000    0.000    0.005    0.005 EFSM.py:1325(initNtscdpredDict)
       23    0.004    0.000    0.005    0.000 EFSM.py:1343(ntscdPredecessor)
       23    0.008    0.000    0.042    0.002 EFSM.py:1360(unticdSuccessor)
       22    0.003    0.000    0.012    0.001 EFSM.py:1410(unticdSuccCandidate)
        1    0.000    0.000    0.042    0.042 EFSM.py:1429(initUnticdSuccDict)
        1    0.000    0.000    0.004    0.004 EFSM.py:1436(initUnticdpredDict)
       23    0.004    0.000    0.004    0.000 EFSM.py:1454(unticdPredecessor)
       23    0.005    0.000    0.023    0.001 EFSM.py:1470(vDefUseList)
        1    0.000    0.000    0.000    0.000 EFSM.py:153(DGraph)
        1    0.000    0.000    0.024    0.024 EFSM.py:1534(initTranVarList)
        1    0.000    0.000    0.001    0.001 EFSM.py:1538(initTranDUvarList)
       61    0.003    0.000    0.006    0.000 EFSM.py:1592(isDefClearPath)
        3    0.000    0.000    0.000    0.000 EFSM.py:160(__init__)
       23    0.026    0.001    0.297    0.013 EFSM.py:1638(ddSuccessor)
        1    0.000    0.000    0.000    0.000 EFSM.py:17(State)
       23    0.006    0.000    0.007    0.000 EFSM.py:1705(ddPredecessor)
        1    0.000    0.000    0.297    0.297 EFSM.py:1715(initDdSuccDict)
        1    0.000    0.000    0.007    0.007 EFSM.py:1720(initDdpredDict)
        3    0.003    0.001    0.105    0.035 EFSM.py:1752(makeDependenceGraph)
      291    0.094    0.000    0.096    0.000 EFSM.py:180(addEdge)
        1    0.004    0.004    0.035    0.035 EFSM.py:1834(efsmFromFile)
        1    0.000    0.000    1.446    1.446 EFSM.py:1863(initEFSM)
        9    0.000    0.000    0.000    0.000 EFSM.py:19(__init__)
        1    0.000    0.000    0.000    0.000 EFSM.py:22(__repr__)
        1    0.000    0.000    0.000    0.000 EFSM.py:25(Transition)
       23    0.000    0.000    0.001    0.000 EFSM.py:27(__init__)
        1    0.003    0.003    0.191    0.191 EFSM.py:3(<module>)
        1    0.000    0.000    0.000    0.000 EFSM.py:334(EFSM)
        1    0.000    0.000    0.000    0.000 EFSM.py:338(__init__)
        9    0.000    0.000    0.000    0.000 EFSM.py:381(addState)
       23    0.001    0.000    0.002    0.000 EFSM.py:390(addTransition)
       46    0.000    0.000    0.000    0.000 EFSM.py:420(state)
      163    0.001    0.000    0.001    0.000 EFSM.py:429(transition)
        2    0.000    0.000    0.000    0.000 EFSM.py:44(__repr__)
        8    0.001    0.000    0.001    0.000 EFSM.py:458(stateSuccessor)
        1    0.000    0.000    0.001    0.001 EFSM.py:473(initEndStateList)
        1    0.000    0.000    0.003    0.003 EFSM.py:484(initTransitionSuccessor)
        1    0.000    0.000    0.000    0.000 EFSM.py:49(Path)
       23    0.003    0.000    0.003    0.000 EFSM.py:492(transitionSuccessor)
        1    0.000    0.000    0.105    0.105 EFSM.py:505(initTranIntraSuccessor)
     5749    0.040    0.000    0.052    0.000 EFSM.py:51(__init__)
       23    0.103    0.004    0.105    0.005 EFSM.py:513(transitionIntraSuccessor)
       69    0.009    0.000    0.009    0.000 EFSM.py:550(transitionSibling)
        1    0.000    0.000    0.000    0.000 EFSM.py:560(finalTransition)
       67    0.358    0.005    0.358    0.005 EFSM.py:569(isCtrSink)
     24/1    0.062    0.003    0.422    0.422 EFSM.py:592(findctrSinkList)
        1    0.000    0.000    0.422    0.422 EFSM.py:624(initCtrSinkList)
      954    0.057    0.000    0.249    0.000 EFSM.py:649(pathAppend)
     1747    0.071    0.000    0.148    0.000 EFSM.py:679(isMaxPath)
       23    0.018    0.001    0.187    0.008 EFSM.py:734(findMaxPath)
     9722    0.033    0.000    0.033    0.000 EFSM.py:76(__getitem__)
        1    0.000    0.000    0.187    0.187 EFSM.py:766(initMaxPathDict)
       22    0.000    0.000    0.001    0.000 EFSM.py:772(findSuccMaxPath)
       22    0.003    0.000    0.029    0.001 EFSM.py:781(findShortestMaxPath)
      128    0.001    0.000    0.001    0.000 EFSM.py:80(__len__)
     2719    0.044    0.000    0.079    0.000 EFSM.py:81(__add__)
        1    0.000    0.000    0.010    0.010 EFSM.py:812(initUnfairSinkPathDict)
       23    0.008    0.000    0.010    0.000 EFSM.py:816(findUnfairSinkPath)
       22    0.001    0.000    0.001    0.000 EFSM.py:829(findSuccUnfairSinkPath)
        1    0.000    0.000    0.048    0.048 EFSM.py:841(initShortestSinkPath)
       23    0.006    0.000    0.047    0.002 EFSM.py:848(findShortestSinkPath)
       95    0.002    0.000    0.003    0.000 EFSM.py:88(__getslice__)
     1376    0.059    0.000    0.079    0.000 EFSM.py:881(sublist)
      695    0.009    0.000    0.088    0.000 EFSM.py:891(isSinkPath)
       23    0.009    0.000    0.012    0.001 EFSM.py:899(findSinkPath)
        1    0.000    0.000    0.012    0.012 EFSM.py:921(initSinkPathDict)
      135    0.004    0.000    0.006    0.000 EFSM.py:927(findSuccSinkPath)
     2874    0.019    0.000    0.066    0.000 EFSM.py:94(count)
     1747    0.037    0.000    0.064    0.000 EFSM.py:98(stateSequenceList)
       21    0.002    0.000    0.010    0.000 EFSM.py:984(nticdSuccCandidate)
        1    0.005    0.005    0.138    0.138 SM.py:22(<module>)
        1    0.000    0.000    0.000    0.000 SM.py:27(State)
        1    0.000    0.000    0.000    0.000 SM.py:43(Transition)
        1    0.000    0.000    0.000    0.000 SM.py:77(State_Machine)
        1    0.000    0.000    0.000    0.000 Skip.py:1(<module>)
        1    0.000    0.000    0.000    0.000 Skip.py:6(State_Machine)
        1    0.000    0.000    0.000    0.000 __future__.py:48(<module>)
        1    0.000    0.000    0.000    0.000 __future__.py:74(_Feature)
        7    0.000    0.000    0.000    0.000 __future__.py:75(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1(<module>)
        1    0.009    0.009    1.925    1.925 efsm_example.py:1(<module>)
        1    0.000    0.000    1.586    1.586 efsm_example.py:15(example)
        1    0.000    0.000    0.000    0.000 genericpath.py:85(_splitext)
        1    0.000    0.000    0.000    0.000 kvparser.py:100(Parser)
      147    0.004    0.000    0.006    0.000 kvparser.py:107(unescape)
        1    0.005    0.005    0.019    0.019 kvparser.py:115(parse)
        1    0.000    0.000    0.000    0.000 kvparser.py:157(TestParser)
        1    0.000    0.000    0.000    0.000 kvparser.py:171(ListParser)
        1    0.000    0.000    0.000    0.000 kvparser.py:189(_Stack)
        1    0.000    0.000    0.000    0.000 kvparser.py:190(__init__)
       32    0.000    0.000    0.000    0.000 kvparser.py:191(push)
       33    0.000    0.000    0.000    0.000 kvparser.py:192(pop)
      179    0.001    0.000    0.001    0.000 kvparser.py:193(top)
        1    0.000    0.000    0.019    0.019 kvparser.py:196(parse)
       32    0.000    0.000    0.001    0.000 kvparser.py:204(openBlock)
      147    0.002    0.000    0.003    0.000 kvparser.py:207(addItem)
       32    0.000    0.000    0.001    0.000 kvparser.py:210(closeBlock)
        1    0.000    0.000    0.009    0.009 kvparser.py:72(<module>)
        1    0.000    0.000    0.000    0.000 kvparser.py:91(ParseError)
       96    0.001    0.000    0.002    0.000 lex.py:211(input)
        1    0.000    0.000    0.002    0.002 lex.py:25(<module>)
      357    0.009    0.000    0.016    0.000 lex.py:264(token)
        1    0.002    0.002    0.012    0.012 lex.py:373(_validate_file)
        1    0.001    0.001    0.073    0.073 lex.py:446(_form_master_re)
        1    0.000    0.000    0.000    0.000 lex.py:47(LexError)
       39    0.001    0.000    0.002    0.000 lex.py:485(_statetoken)
        1    0.005    0.005    0.183    0.183 lex.py:506(lex)
        1    0.000    0.000    0.000    0.000 lex.py:54(LexWarning)
        1    0.000    0.000    0.000    0.000 lex.py:55(__init__)
        1    0.000    0.000    0.000    0.000 lex.py:65(LexToken)
        4    0.000    0.000    0.000    0.000 lex.py:661(<lambda>)
      120    0.002    0.000    0.004    0.000 lex.py:665(<lambda>)
        1    0.000    0.000    0.000    0.000 lex.py:83(Lexer)
        1    0.000    0.000    0.000    0.000 lex.py:84(__init__)
        1    0.000    0.000    0.000    0.000 ntpath.py:189(splitext)
        1    0.000    0.000    0.055    0.055 platform.py:10(<module>)
        1    0.000    0.000    0.000    0.000 platform.py:363(_popen)
        1    0.000    0.000    1.930    1.930 profile:0(execfile('efsm_example.py'))
        0    0.000             0.000          profile:0(profiler)
        1    0.002    0.002    0.072    0.072 random.py:40(<module>)
        1    0.000    0.000    0.000    0.000 random.py:641(WichmannHill)
        1    0.000    0.000    0.000    0.000 random.py:71(Random)
        1    0.000    0.000    0.000    0.000 random.py:791(SystemRandom)
        1    0.000    0.000    0.070    0.070 random.py:90(__init__)
        1    0.000    0.000    0.070    0.070 random.py:99(seed)
       52    0.000    0.000    0.228    0.004 re.py:186(compile)
       52    0.002    0.000    0.227    0.004 re.py:227(_compile)
        1    0.003    0.003    0.188    0.188 sclexer.py:3(<module>)
       98    0.001    0.000    0.001    0.000 sclexer.py:52(t_ID)
       84    0.003    0.000    0.014    0.000 sre_compile.py:184(_compile_charset)
       84    0.006    0.000    0.009    0.000 sre_compile.py:213(_optimize_charset)
      196    0.001    0.000    0.001    0.000 sre_compile.py:24(_identityfunction)
        7    0.001    0.000    0.001    0.000 sre_compile.py:264(_mk_bitmap)
       82    0.001    0.000    0.002    0.000 sre_compile.py:360(_simple)
       52    0.006    0.000    0.030    0.001 sre_compile.py:367(_compile_info)
   349/52    0.028    0.000    0.066    0.001 sre_compile.py:38(_compile)
      104    0.001    0.000    0.001    0.000 sre_compile.py:480(isstring)
       52    0.001    0.000    0.098    0.002 sre_compile.py:486(_code)
       52    0.002    0.000    0.224    0.004 sre_compile.py:501(compile)
      456    0.003    0.000    0.004    0.000 sre_parse.py:132(__len__)
     1162    0.009    0.000    0.013    0.000 sre_parse.py:136(__getitem__)
       82    0.000    0.000    0.000    0.000 sre_parse.py:140(__setitem__)
      474    0.003    0.000    0.005    0.000 sre_parse.py:144(append)
  431/134    0.010    0.000    0.017    0.000 sre_parse.py:146(getwidth)
       52    0.000    0.000    0.001    0.000 sre_parse.py:184(__init__)
     1909    0.022    0.000    0.035    0.000 sre_parse.py:188(__next)
     1094    0.006    0.000    0.015    0.000 sre_parse.py:201(match)
     1383    0.010    0.000    0.036    0.000 sre_parse.py:207(get)
      484    0.002    0.000    0.002    0.000 sre_parse.py:216(isident)
       74    0.002    0.000    0.004    0.000 sre_parse.py:222(isname)
       28    0.000    0.000    0.001    0.000 sre_parse.py:231(_class_escape)
       83    0.001    0.000    0.002    0.000 sre_parse.py:263(_escape)
   197/52    0.010    0.000    0.120    0.002 sre_parse.py:307(_parse_sub)
   256/91    0.027    0.000    0.115    0.001 sre_parse.py:385(_parse)
       52    0.001    0.000    0.124    0.002 sre_parse.py:669(parse)
       52    0.000    0.000    0.000    0.000 sre_parse.py:73(__init__)
      138    0.001    0.000    0.002    0.000 sre_parse.py:78(opengroup)
      138    0.001    0.000    0.001    0.000 sre_parse.py:89(closegroup)
      357    0.001    0.000    0.001    0.000 sre_parse.py:96(__init__)
        1    0.000    0.000    0.000    0.000 tempfile.py:107(_RandomNameSequence)
        1    0.006    0.006    0.078    0.078 tempfile.py:18(<module>)
        1    0.000    0.000    0.000    0.000 tempfile.py:357(_TemporaryFileWrapper)
        1    0.000    0.000    0.000    0.000 tempfile.py:483(SpooledTemporaryFile)


